#!/bin/bash
set -e
set -x

# --- Configuration ---
# Ensure we are running from the 'fuzz' directory
if [ "$(basename "$(pwd)")" != "fuzz" ]; then
  echo "Error: This script must be run from the 'fuzz' directory."
  exit 1
fi

TOOLCHAIN="nightly"
# Features might be needed for the binaries to run correctly with corpus inputs
FEATURES="libfuzzer_fuzz"
# Output directories relative to 'fuzz' directory
SOURCE_PATH=".." # Project root relative to fuzz dir

# --- Dependencies ---
echo "Checking/installing dependencies..."
# cargo-llvm-cov implicitly uses/installs necessary LLVM tools, but we need llvm-profdata for merging
rustup +${TOOLCHAIN} component add llvm-tools-preview
# Check if cargo-llvm-cov is installed, install if not
if ! cargo +${TOOLCHAIN} --list | grep -q "llvm-cov"; then
    echo "Installing cargo-llvm-cov..."
    cargo +${TOOLCHAIN} install cargo-llvm-cov
fi

# Clean previous builds (might be necessary for cargo-llvm-cov)
echo "Cleaning previous build artifacts..."
cargo +${TOOLCHAIN} clean

# Define merged profdata path
MERGED_PROFDATA_PATH="target/coverage/merged.profdata"
rm -f "$MERGED_PROFDATA_PATH"

# --- Run Targets and Collect Coverage Data --- 
echo "Running fuzz targets with cargo-llvm-cov to collect coverage..."

# --- Temporarily focus on a single target for debugging ---
TARGET_NAME="base32_target" # Hardcode a single target

# Set RUSTFLAGS required for fuzzing, matching ci-fuzz-libfuzzer.sh
# This enables #[cfg(fuzzing)] blocks to expose private items.
export RUSTFLAGS="--cfg=fuzzing --cfg=secp256k1_fuzz --cfg=hashes_fuzz"

# Determine host triple dynamically for the --target flag
HOST_TRIPLE=$(rustc +${TOOLCHAIN} --version --verbose | grep host | cut -d' ' -f2)
if [ -z "$HOST_TRIPLE" ]; then
    echo "Error: Could not determine host triple."
    exit 1
fi
echo "Detected host triple: $HOST_TRIPLE"

# Define combined features, explicitly adding std for relevant dependencies
COMBINED_FEATURES="$FEATURES,lightning/_test_utils,lightning/std,lightning-invoice/std"

# --- Run the single target ---
TARGET_CORPUS_DIR="corpus/$TARGET_NAME"
if [ -d "$TARGET_CORPUS_DIR" ]; then
    echo "Running cargo llvm-cov for target: $TARGET_NAME with corpus $TARGET_CORPUS_DIR"
    # Run the target to generate coverage data
    # cargo-llvm-cov run will build, execute, and generate profdata in target/llvm-cov-target
    if ! cargo +${TOOLCHAIN} llvm-cov run --target "$HOST_TRIPLE" --features "$COMBINED_FEATURES" --bin "$TARGET_NAME" -- "$TARGET_CORPUS_DIR" -runs=1; then
         echo "Warning: Execution of $TARGET_NAME with cargo-llvm-cov finished with non-zero status."
    fi
else
    echo "Error: Corpus directory ($TARGET_CORPUS_DIR) not found for target $TARGET_NAME."
    exit 1 # Exit if corpus is missing for the single target run
fi

unset RUSTFLAGS

# --- Generate HTML Report using llvm-cov show ---
echo "Generating HTML coverage report using llvm-cov show..."

# Define paths and commands
# LLVM_COV_PATH="$(rustc +${TOOLCHAIN} --print sysroot)/lib/rustlib/$HOST_TRIPLE/bin/llvm-cov"
BINARY_PATH="target/llvm-cov-target/$HOST_TRIPLE/debug/$TARGET_NAME"
# Point to the profdata generated by cargo llvm-cov run
PROFDATA_PATH="target/llvm-cov-target/$HOST_TRIPLE/debug/default.profdata"
HTML_REPORT_DIR_LLVM_SHOW="target/coverage/html_llvm_show" # Use distinct dir

# Combine all ignore patterns into a single regex
IGNORE_REGEX="(/.cargo/|/fuzz/|/target/|/contrib/|/tests/|/benches/|lightning-invoice/src/convert\.rs|lightning-block-sync/src/lib\.rs|lightning-net-tokio/src/lib\.rs|lightning-persister/src/lib\.rs|lightning-rapid-gossip-sync/src/lib\.rs|lightning-transaction-sync/src/lib\.rs|lightning/src/util/ser\.rs)"

if [ ! -f "$BINARY_PATH" ]; then
    echo "Error: Instrumented binary not found at $BINARY_PATH"
    exit 1
fi
# Check the profdata file created by cargo llvm-cov run
if [ ! -f "$PROFDATA_PATH" ]; then
    echo "Error: Profile data not found at $PROFDATA_PATH."
    exit 1
fi

# Create output directory
rm -rf "$HTML_REPORT_DIR_LLVM_SHOW"
mkdir -p "$HTML_REPORT_DIR_LLVM_SHOW"

# Execute llvm-cov show using the merged profdata
llvm-cov show \
    -format=html \
    -output-dir="$HTML_REPORT_DIR_LLVM_SHOW" \
    -ignore-filename-regex="$IGNORE_REGEX" \
    -instr-profile="$PROFDATA_PATH" \
    -object="$BINARY_PATH" \
    -show-instantiations=false \
    -show-line-counts-or-regions

# --- Done ---
echo "--------------------------------------------------"
echo "llvm-cov show finished."
echo "Report available at: fuzz/$HTML_REPORT_DIR_LLVM_SHOW/index.html"
echo "--------------------------------------------------" 